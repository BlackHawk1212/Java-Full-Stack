JDBC						HIBERNATE(ORM)
----						--------------
> Database					> Database
> Tables					> Tables
> CRUD-->Table should exist			> Create and use it
> insert into tablename values(1,"Nimesh",25)	> Employee emp = new Employee(1,"Nimesh",25)
						  save(emp)	//For 1 record

						  List<Employee> emp
						  saveAll(emp)	//For multiple records

> Pre-defined methods - (insert,update,delete,	> save,update,delete,get,load
  select)
> insert into					> dialect
> Mapping					> Mapping(One to Many, Many to One)



hibernate.cfg.xml(Database details)
-----------------------------------
<hibernate-configuration>
	<property name="connection.url">jdbc:mysql://localhost:3306/demodatabase</property>
	<property name="connection.username">root</property>
	<property name="connection.password">root</property>
	<property name="connection.driver_class_name">com.mysql.jdbc.Driver</property>
	<property name="dialect">org.hibernate.dialect.MySQLDialect</property>
	<property name="hbm2ddl.auto">create,update,create-drop,validate</property>
</hibernate-configuration>



class Employee--->tablename
{
	private int empId;	--->Column name
	private String name;	--->Column name
	private int age;	--->Column name
}



Employee.hbm.xml(Hibernate Mapping file)
----------------------------------------
<Hibernate-mapping>
	<class name="com.demo,Employee" table="tble_emp">
		<id name="empid">
		<generator class="assigned"></generator>
		</id>
		<property name="name" column="empname"/>
		<property name="age" column="empage"/>
	</class>
</Hibernate-mapping>



tbl_emp
-------
empid		empname			empage



Main
----
Employee emp = new Employee(1,"Nimesh",34);
Confuguration config = new Configuration();
config.configure("hibernate.cfg.xml");
SessionFactory sf = config.buildSessionFacotry();
Session session = sf.openSession();
session.save(emp);

update
delete

get load

Employee emp = new Employee();



ORM
---
Hibernate
Toplink


1. request --> select * from employee --> first level cache --> database
2. request --> select * from employee --> first level cache --> database

3. request --> select * from employee --> first level cache --> second level cache --> database
request --> select * from employee --> first level cache --> second level cache --> database